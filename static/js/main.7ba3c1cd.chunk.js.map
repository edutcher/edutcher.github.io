{"version":3,"sources":["hooks/useLocalStorage.js","App.js","themes/themes.js","reportWebVitals.js","index.js"],"names":["UseLocalStorage","key","defaultVal","useState","val","JSON","parse","window","localStorage","getItem","String","error","state","setState","useEffect","setItem","stringify","useStyles","makeStyles","theme","vid","position","width","height","left","top","objectFit","transform","zIndex","header","margin","spacing","cont","marginTop","App","classes","darkMode","setDarkMode","mode","setMode","ThemeProvider","responsiveFontSizes","createMuiTheme","palette","type","CssBaseline","autoPlay","loop","muted","className","src","Box","Typography","variant","component","Tooltip","title","IconButton","onClick","e","Container","Paper","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAqBeA,MAnBf,SAAyBC,EAAKC,GAC5B,MAA0BC,oBAAS,WACjC,IAAIC,EACJ,IACEA,EAAMC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQR,IAAQS,OAAOR,IAC5D,MAAOS,GACPP,EAAMF,EAER,OAAOE,KAPT,mBAAOQ,EAAP,KAAcC,EAAd,KAeA,OALAC,qBAAU,WACRP,OAAOC,aAAaO,QAAQd,EAAKI,KAAKW,UAAUJ,MAE/C,CAACA,IAEG,CAACA,EAAOC,I,OCAXI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,IAAK,CACHC,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRC,KAAM,MACNC,IAAK,MACLC,UAAW,QACXC,UAAW,uBACXC,OAAQ,MAEVC,OAAQ,CACNC,OAAQX,EAAMY,QAAQ,KAExBC,KAAM,CACJC,UAAWd,EAAMY,QAAQ,SAId,SAASG,IACtB,IAAMC,EAAUlB,IAChB,EAAgCd,oBAAS,GAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACA,EAAwBrC,EAAgB,OAAQ,SAAhD,mBAAOsC,EAAP,KAAaC,EAAb,KAYA,OAJAzB,qBAAU,WACK,SAATwB,GAAiBD,GAAY,KAChC,CAACC,IAGF,cAACE,EAAA,EAAD,CAAerB,MAAOiB,ECzCxBK,YACEC,YAAe,CACbC,QAAS,CACPC,KAAM,WAZZH,YACEC,YAAe,CACbC,QAAS,CACPC,KAAM,YD+CV,SACE,eAACC,EAAA,EAAD,WACE,uBAAOC,UAAQ,EAACC,MAAI,EAACC,OAAK,EAAgBC,UAAWd,EAAQf,IAA7D,SACE,wBACE8B,IACEd,EACI,qFACA,wFAENQ,KAAK,eAPuBR,GAUhC,eAACe,EAAA,EAAD,CAAKF,UAAWd,EAAQN,OAAxB,UACE,cAACuB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,2BAGA,cAACC,EAAA,EAAD,CAASC,MAAOpB,EAAW,aAAe,YAA1C,SACE,cAACqB,EAAA,EAAD,CAAYC,QA5BI,SAACC,GACzBtB,GAAaD,GACSG,EAAT,UAATD,EAA0B,OACjB,UAyBL,SACGF,EAAW,cAAC,IAAD,IAAyB,cAAC,IAAD,WAI3C,cAACwB,EAAA,EAAD,CAAWX,UAAWd,EAAQH,KAA9B,SACE,eAAC6B,EAAA,EAAD,WACE,cAACT,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKQ,MAAO,CAAEhC,OAAQ,QAAzD,uBAGA,cAACsB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,IAAtC,ysBEhFZ,IAYeS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACxC,EAAD,MAEFyC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7ba3c1cd.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction UseLocalStorage(key, defaultVal) {\r\n  const [state, setState] = useState(() => {\r\n    let val;\r\n    try {\r\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n    } catch (error) {\r\n      val = defaultVal;\r\n    }\r\n    return val;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport default UseLocalStorage;\r\n","import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  ThemeProvider,\n  CssBaseline,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  IconButton,\n  Box,\n  Tooltip,\n} from \"@material-ui/core\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\nimport { lightTheme, darkTheme } from \"./themes/themes\";\nimport UseLocalStorage from \"./hooks/useLocalStorage\";\n\nconst useStyles = makeStyles((theme) => ({\n  vid: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    left: \"50%\",\n    top: \"50%\",\n    objectFit: \"cover\",\n    transform: \"translate(-50%,-50%)\",\n    zIndex: \"-1\",\n  },\n  header: {\n    margin: theme.spacing(20),\n  },\n  cont: {\n    marginTop: theme.spacing(90),\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [darkMode, setDarkMode] = useState(false);\n  const [mode, setMode] = UseLocalStorage(\"mode\", \"light\");\n\n  const handleThemeChange = (e) => {\n    setDarkMode(!darkMode);\n    if (mode === \"light\") setMode(\"dark\");\n    else setMode(\"light\");\n  };\n\n  useEffect(() => {\n    if (mode === \"dark\") setDarkMode(true);\n  }, [mode]);\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme() : lightTheme()}>\n      <CssBaseline>\n        <video autoPlay loop muted key={darkMode} className={classes.vid}>\n          <source\n            src={\n              darkMode\n                ? \"https://res.cloudinary.com/dd9hrrpch/video/upload/v1623466162/vids/moon_hcmtae.mp4\"\n                : \"https://res.cloudinary.com/dd9hrrpch/video/upload/v1623725147/vids/beach_2_sh64vu.mp4\"\n            }\n            type=\"video/mp4\"\n          />\n        </video>\n        <Box className={classes.header}>\n          <Typography variant=\"h1\" component=\"h1\">\n            Hi, I'm Ethan\n          </Typography>\n          <Tooltip title={darkMode ? \"Light Mode\" : \"Dark Mode\"}>\n            <IconButton onClick={handleThemeChange}>\n              {darkMode ? <BrightnessHighIcon /> : <Brightness3Icon />}\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Container className={classes.cont}>\n          <Paper>\n            <Typography variant=\"h2\" component=\"h2\" style={{ margin: \"25px\" }}>\n              About Me:\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\">\n              I am an aspiring Web Developer with a history in movie theatre\n              projection systems and IT. I have recently completed a Full Stack\n              coding bootcamp from the University of Central Florida and I am\n              looking forward to taking everything I have learned and putting it\n              into practice. The program focused on the MERN stack, but I would\n              say the key thing I learned from the expereince is that this\n              career will be focused around learning new technologies and\n              keeping pace with the industry. To that end, I have been spending\n              time to prepare to take the AWS Cloud Practitioners Certification.\n              I have also started learning about Docker and containerization,\n              while picking up Python as a second language.\n            </Typography>\n          </Paper>\n        </Container>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\n\r\nconst lightTheme = () =>\r\n  responsiveFontSizes(\r\n    createMuiTheme({\r\n      palette: {\r\n        type: \"light\",\r\n      },\r\n    })\r\n  );\r\n\r\nconst darkTheme = () =>\r\n  responsiveFontSizes(\r\n    createMuiTheme({\r\n      palette: {\r\n        type: \"dark\",\r\n      },\r\n    })\r\n  );\r\n\r\nexport { lightTheme, darkTheme };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}