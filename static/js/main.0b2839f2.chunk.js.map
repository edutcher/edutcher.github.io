{"version":3,"sources":["hooks/useLocalStorage.js","App.js","themes/themes.js","reportWebVitals.js","index.js"],"names":["UseLocalStorage","key","defaultVal","useState","val","JSON","parse","window","localStorage","getItem","String","error","state","setState","useEffect","setItem","stringify","useStyles","makeStyles","theme","heading","margin","spacing","breakpoints","up","video","position","width","top","left","height","objectFit","transform","zIndex","content","marginTop","App","classes","darkMode","setDarkMode","mode","setMode","ThemeProvider","responsiveFontSizes","createMuiTheme","palette","type","CssBaseline","autoPlay","loop","muted","className","id","src","Box","Typography","variant","component","Tooltip","title","IconButton","onClick","e","Container","Grid","container","item","xs","Paper","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAqBeA,MAnBf,SAAyBC,EAAKC,GAC5B,MAA0BC,oBAAS,WACjC,IAAIC,EACJ,IACEA,EAAMC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQR,IAAQS,OAAOR,IAC5D,MAAOS,GACPP,EAAMF,EAER,OAAOE,KAPT,mBAAOQ,EAAP,KAAcC,EAAd,KAeA,OALAC,qBAAU,WACRP,OAAOC,aAAaO,QAAQd,EAAKI,KAAKW,UAAUJ,MAE/C,CAACA,IAEG,CAACA,EAAOC,I,yCCAXI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAQ,aACNC,OAAQF,EAAMG,QAAQ,KACrBH,EAAMI,YAAYC,GAAG,MAAQ,CAC5BH,OAAQF,EAAMG,QAAQ,MAG1BG,MAAO,CACLC,SAAU,WACVC,MAAO,OACPC,IAAK,MACLC,KAAM,MACNC,OAAQ,OACRC,UAAW,QACXC,UAAW,uBACXC,OAAQ,MAEVC,QAAQ,aACNC,UAAW,QACVhB,EAAMI,YAAYC,GAAG,MAAQ,CAC5BW,UAAW,aAmEFC,MA9Df,WACE,IAAMC,EAAUpB,IAChB,EAAgCd,oBAAS,GAAzC,mBAAOmC,EAAP,KAAiBC,EAAjB,KACA,EAAwBvC,EAAgB,OAAQ,SAAhD,mBAAOwC,EAAP,KAAaC,EAAb,KAYA,OAJA3B,qBAAU,WACK,SAAT0B,GAAiBD,GAAY,KAChC,CAACC,IAGF,cAACE,EAAA,EAAD,CAAevB,MAAOmB,EC/CxBK,YACEC,YAAe,CACbC,QAAS,CACPC,KAAM,WAZZH,YACEC,YAAe,CACbC,QAAS,CACPC,KAAM,YDqDV,SACE,eAACC,EAAA,EAAD,WACE,uBAAOC,UAAQ,EAACC,MAAI,EAACC,OAAK,EAACC,UAAWd,EAAQZ,MAA9C,SACE,wBACE2B,GAAG,SACHC,IACEf,EACI,qFACA,wFAENQ,KAAK,eARiDR,GAW1D,eAACgB,EAAA,EAAD,CAAKH,UAAWd,EAAQjB,QAAxB,UACE,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,2BAGA,cAACC,EAAA,EAAD,CAASC,MAAOrB,EAAW,aAAe,YAA1C,SACE,cAACsB,EAAA,EAAD,CAAYC,QA7BI,SAACC,GACzBvB,GAAaD,GACSG,EAAT,UAATD,EAA0B,OACjB,UA0BL,SACGF,EAAW,cAAC,IAAD,IAAyB,cAAC,IAAD,WAI3C,cAACyB,EAAA,EAAD,CAAWZ,UAAWd,EAAQH,QAA9B,SACE,cAAC8B,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACb,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVY,MAAO,CAAEhD,OAAQ,QAHnB,uBAOA,cAACkC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,IAAtC,8CEjFDa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0b2839f2.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction UseLocalStorage(key, defaultVal) {\r\n  const [state, setState] = useState(() => {\r\n    let val;\r\n    try {\r\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n    } catch (error) {\r\n      val = defaultVal;\r\n    }\r\n    return val;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport default UseLocalStorage;\r\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  CssBaseline,\n  ThemeProvider,\n  Box,\n  IconButton,\n  Tooltip,\n  Grid,\n  Paper,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { lightTheme, darkTheme } from \"./themes/themes\";\nimport UseLocalStorage from \"./hooks/useLocalStorage\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    margin: theme.spacing(10),\n    [theme.breakpoints.up(\"sm\")]: {\n      margin: theme.spacing(20),\n    },\n  },\n  video: {\n    position: \"absolute\",\n    width: \"100%\",\n    top: \"50%\",\n    left: \"50%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n    transform: \"translate(-50%,-50%)\",\n    zIndex: \"-1\",\n  },\n  content: {\n    marginTop: \"75vh\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: \"70vh\",\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [darkMode, setDarkMode] = useState(false);\n  const [mode, setMode] = UseLocalStorage(\"mode\", \"light\");\n\n  const handleThemeChange = (e) => {\n    setDarkMode(!darkMode);\n    if (mode === \"light\") setMode(\"dark\");\n    else setMode(\"light\");\n  };\n\n  useEffect(() => {\n    if (mode === \"dark\") setDarkMode(true);\n  }, [mode]);\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme() : lightTheme()}>\n      <CssBaseline>\n        <video autoPlay loop muted className={classes.video} key={darkMode}>\n          <source\n            id=\"vidsrc\"\n            src={\n              darkMode\n                ? \"https://res.cloudinary.com/dd9hrrpch/video/upload/v1623466162/vids/moon_hcmtae.mp4\"\n                : \"https://res.cloudinary.com/dd9hrrpch/video/upload/v1623725147/vids/beach_2_sh64vu.mp4\"\n            }\n            type=\"video/mp4\"\n          />\n        </video>\n        <Box className={classes.heading}>\n          <Typography variant=\"h1\" component=\"h1\">\n            Hi, I'm Ethan\n          </Typography>\n          <Tooltip title={darkMode ? \"Light Mode\" : \"Dark Mode\"}>\n            <IconButton onClick={handleThemeChange}>\n              {darkMode ? <BrightnessHighIcon /> : <Brightness3Icon />}\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Container className={classes.content}>\n          <Grid container>\n            <Grid item xs={12}>\n              <Paper>\n                <Typography\n                  variant=\"h2\"\n                  component=\"h2\"\n                  style={{ margin: \"25px\" }}\n                >\n                  About Me:\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\">\n                  &emsp; I do stuff\n                </Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\n\r\nconst lightTheme = () =>\r\n  responsiveFontSizes(\r\n    createMuiTheme({\r\n      palette: {\r\n        type: \"light\",\r\n      },\r\n    })\r\n  );\r\n\r\nconst darkTheme = () =>\r\n  responsiveFontSizes(\r\n    createMuiTheme({\r\n      palette: {\r\n        type: \"dark\",\r\n      },\r\n    })\r\n  );\r\n\r\nexport { lightTheme, darkTheme };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}